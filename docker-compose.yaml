version: "3.9"

services:

  # Broker MQTT EMQX
  emqx:
    user: root
    image: "emqx:4.4.3" # Utiliza la imagen de EMQX versión 4.4.3
    ports:
      - "18083:18083" # Mapea el puerto 18083 del contenedor al puerto 18083 del host
      - "1883:1883" # Mapea el puerto 1883 del contenedor al puerto 1883 del host
      - "8883:8883" # Mapea el puerto 8883 del contenedor al puerto 8883 del host
    volumes:
      - ./data/emqx/data:/opt/emqx/data # Monta el directorio local './data/emqx/data' en '/opt/emqx/data' dentro del contenedor
      - ./data/emqx/log:/opt/emqx/log # Monta el directorio local './data/emqx/log' en '/opt/emqx/log' dentro del contenedor
    environment:
      - EMQX_DASHBOARD__DEFAULT_USER__LOGIN=admin # Configura la variable de entorno EMQX_DASHBOARD__DEFAULT_USER__LOGIN con el valor 'admin'
      - EMQX_DASHBOARD__DEFAULT_USER__PASSWORD=admin # Configura la variable de entorno EMQX_DASHBOARD__DEFAULT_USER__PASSWORD con el valor 'admin'

  # Base de datos InfluxDB
  influxdb:
    image: "influxdb:2.2.0-alpine" # Utiliza la imagen de InfluxDB versión 2.2.0-alpine
    ports:
      - "8086:8086" # Mapea el puerto 8086 del contenedor al puerto 8086 del host
    volumes:
      - ./data/influxdb/data:/var/lib/influxdb2 # Monta el directorio local './data/influxdb/data' en '/var/lib/influxdb2' dentro del contenedor
      - ./data/influxdb/config:/etc/influxdb2 # Monta el directorio local './data/influxdb/config' en '/etc/influxdb2' dentro del contenedor
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup # Configura la variable de entorno DOCKER_INFLUXDB_INIT_MODE con el valor 'setup'
      - DOCKER_INFLUXDB_INIT_USERNAME=administrator # Configura la variable de entorno DOCKER_INFLUXDB_INIT_USERNAME con el valor 'admin'
      - DOCKER_INFLUXDB_INIT_PASSWORD=Administrator1 # Configura la variable de entorno DOCKER_INFLUXDB_INIT_PASSWORD con el valor 'admin'
      - DOCKER_INFLUXDB_INIT_ORG=GuillermoQuintana # Configura la variable de entorno DOCKER_INFLUXDB_INIT_ORG con el valor 'GuillermoQuintana'
      - DOCKER_INFLUXDB_INIT_BUCKET=iotdata # Configura la variable de entorno DOCKER_INFLUXDB_INIT_BUCKET con el valor 'iotdata'
      - DOCKER_INFLUXDB_INIT_RETENTION=1w # Configura la variable de entorno DOCKER_INFLUXDB_INIT_RETENTION con el valor '1w'
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=GuillermoQuintana-iotdata-auth-token # Configura la variable de entorno DOCKER_INFLUXDB_INIT_ADMIN_TOKEN con el valor 'GuillermoQuintana-iotdata-auth-token'

  # Telegraf
  telegrafoutput:
    image: "telegraf:1.22.4" # Utiliza la imagen de Telegraf versión 1.22.4
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 20
    volumes:
      - ./data/telegrafoutput/telegraf.conf:/etc/telegraf/telegraf.conf # Monta el archivo de configuración local './data/telegrafoutput/telegraf.conf' en '/etc/telegraf/telegraf.conf' dentro del contenedor

  # Grafana
  grafana:
    user: root
    image: "grafana/grafana:8.5.3" # Utiliza la imagen de Grafana versión 8.5.3
    ports:
      - "3000:3000" # Mapea el puerto 3000 del contenedor al puerto 3000 del host
    environment:
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/admin_password # Configura la variable de entorno GF_SECURITY_ADMIN_PASSWORD__FILE con el valor '/run/secrets/admin_password'
    volumes:
      - ./data/grafana:/var/lib/grafana # Monta el directorio local './data/grafana' en '/var/lib/grafana' dentro del contenedor
    secrets:
      - source: grafana_admin_password # Utiliza el secreto 'grafana_admin_password' definido más abajo
        target: /run/secrets/admin_password

secrets:
  grafana_admin_password:
    file: ./secrets/grafana_admin_password # Define el secreto 'grafana_admin_password' utilizando el archivo './secrets/grafana_admin_password'
